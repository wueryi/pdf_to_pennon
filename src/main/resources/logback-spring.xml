<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <!--设置时间戳-->
    <timestamp key="timestamp" datePattern="yyyy-MM-dd HH:mm:ss.SSS"/>
    <!--设置存储路径变量-->
    <property name="LOG_HOME" value="./logs"/>

    <!--控制台输出appender-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--设置输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--文件输出,时间窗口滚动-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志名,指定最新的文件名，其他文件名使用FileNamePattern -->
        <File>${LOG_HOME}/timeFile/out.log</File>
        <!--文件滚动模式-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名,使用gz压缩-->
            <FileNamePattern>${LOG_HOME}/timeFile/info.%d{yyyy-MM-dd}.%i.log.gz</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--按大小分割同一天的-->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <!--输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <!--设置编码-->
            <charset>UTF-8</charset>
        </encoder>
        <!--在root指定的级别之上再次进行过滤,输出大于等于level,可通过onMatch和onMisMatch来确定只输出某个级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <!--接受匹配-->
            <onMatch>ACCEPT</onMatch>
            <!--拒绝不匹配的-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--使用logstash-->
<!--    <appender name="LOGSTASH" class="net.logstash.logback.appender.LogstashTcpSocketAppender">-->
<!--        &lt;!&ndash;logstash ip和暴露的端口&ndash;&gt;-->
<!--        <destination>101.37.253.155:5044</destination>-->
<!--        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder" />-->
<!--    </appender>-->

    <!--生产环节中打印到production-->
    <springProfile name="prod">
        <!--给log1指定文件输出-->
        <logger name="com.pennonedu.student_sign_api" level="warn" additivity="false">
            <appender-ref ref="FILE"/>
        </logger>
    </springProfile>

    <!--local/dev环境中打印到控制台-->
    <springProfile name="local,test">
        <!--给log1指定文件输出-->
        <logger name="com.pennonedu.student_sign_api" level="info" additivity="false">
            <appender-ref ref="CONSOLE"/>
        </logger>
    </springProfile>

    <!--指定基础的日志输出级别-->
    <root level="info">
        <!--appender将会添加到这个loger-->
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
<!--        <appender-ref ref="LOGSTASH"/>-->
    </root>
</configuration>